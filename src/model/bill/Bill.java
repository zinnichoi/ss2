package model.bill;

import domainapp.basics.exceptions.ConstraintViolationException;
import domainapp.basics.model.meta.DAssoc;
import domainapp.basics.model.meta.DAttr;
import domainapp.basics.model.meta.DClass;
import domainapp.basics.model.meta.DOpt;
import domainapp.basics.util.Tuple;
import model.people.Customer;
import model.report.FinanceReport;


@DClass(schema = "internetCafe")
public abstract class Bill {
    @DAttr(name="billId", id = true, auto = true, type= DAttr.Type.String, length = 10, mutable = false, optional = false)
    private String billId;
    private static int idCounter = 0;

    @DAttr(name = "sellDate", type = DAttr.Type.String, mutable = true, optional = false, length = 20)
    private String sellDate;

    @DAttr(name = "financeReport", type = DAttr.Type.Domain, length = 5, optional = false)
    @DAssoc(ascName = "FinanceReport-has-bills", role = "bill",
            ascType = DAssoc.AssocType.One2Many, endType = DAssoc.AssocEndType.Many,
            associate = @DAssoc.Associate(type = FinanceReport.class, cardMin = 1, cardMax = 1), dependsOn = true)
    private FinanceReport financeReport;

    public Bill(String billId, String date, FinanceReport financeReport) {
        this.billId = nextID(billId);
        this.sellDate = date;
        this.financeReport = financeReport;
    }

    public Bill(String date, FinanceReport financeReport) {
        this(null,date,financeReport);
    }

    public Bill(String sellDate) {
        this(null,sellDate,null);
    }

    private String nextID(String currId){
        if (currId == null){
            idCounter++;
            return "B"+ idCounter;
        }else {
            int num = Integer.parseInt(currId.substring(1));
            if (num > idCounter){
                idCounter = num;
            }
            return currId;
        }
    }

    public String getBillId() {
        return billId;
    }

    public void setBillId(String billId) {
        this.billId = billId;
    }

    @DOpt(type=DOpt.Type.AutoAttributeValueSynchroniser)
    public static void updateAutoGeneratedValue(
            DAttr attrib,
            Tuple derivingValue,
            Object minVal,
            Object maxVal) throws ConstraintViolationException {

        if (minVal != null && maxVal != null) {
            //TODO: update this for the correct attribute if there are more than one auto attributes of this class

            String maxId = (String) maxVal;
            try {
                int maxIdNum = Integer.parseInt(maxId.substring(1));

                if (maxIdNum > idCounter) // extra check
                    idCounter = maxIdNum;

            } catch (RuntimeException e) {
                throw new ConstraintViolationException(
                        ConstraintViolationException.Code.INVALID_VALUE, e, new Object[] {maxId});
            }
        }
    }

    public static int getIdCounter() {
        return idCounter;
    }

    public static void setIdCounter(int idCounter) {
        Bill.idCounter = idCounter;
    }

    public String getSellDate() {
        return sellDate;
    }

    public void setSellDate(String sellDate) {
        this.sellDate = sellDate;
    }

    public FinanceReport getFinanceReport() {
        return financeReport;
    }

    public void setFinanceReport(FinanceReport financeReport) {
        this.financeReport = financeReport;
    }
}
