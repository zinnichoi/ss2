package model.utilityCost;

import domainapp.basics.exceptions.ConstraintViolationException;
import domainapp.basics.model.meta.*;
import domainapp.basics.util.Tuple;
import model.report.FinanceReport;

@DClass(schema = "internetCafe")
public class UtilityCost {
    @DAttr(name = "utilityCostId", type = DAttr.Type.String, mutable = false, optional = true, length = 10, id = true, auto = true)
    private String utilityCostId;
    private static int idCounter;
    @DAttr(name = "spendingDate", type = DAttr.Type.String, mutable = true, optional = false, length = 10)
    private String spendingDate;
    @DAttr(name = "electricitySpending", type = DAttr.Type.Integer, mutable = true, optional = false, length = 10)
    private Integer electricitySpending;
    @DAttr(name = "internetSpending", type = DAttr.Type.Integer, mutable = true, optional = false, length = 10)
    private Integer internetSpending;


    @DAttr(name = "financeReport", type = DAttr.Type.Domain, length = 5, optional = false)
    @DAssoc(ascName = "FinanceReport-has-utilityCosts", role = "utilityCost",
            ascType = DAssoc.AssocType.One2Many, endType = DAssoc.AssocEndType.Many,
            associate = @DAssoc.Associate(type = FinanceReport.class, cardMin = 1, cardMax = 1), dependsOn = true)
    private FinanceReport financeReport;

    public UtilityCost(String utilityCostId, String spendingDate, Integer electricitySpending, Integer internetSpending, FinanceReport financeReport) {
        this.utilityCostId = nextID(utilityCostId);
        this.spendingDate = spendingDate;
        this.electricitySpending = electricitySpending;
        this.internetSpending = internetSpending;
        this.financeReport = financeReport;
        financeReport.setTotalCost(internetSpending+electricitySpending);

        financeReport.setInterestRate((-internetSpending-electricitySpending));
    }

    private String nextID(String currId){
        if (currId == null){
            idCounter++;
            return "U"+ idCounter;
        }else {
            int num = Integer.parseInt(currId.substring(1));
            if (num > idCounter){
                idCounter = num;
            }
            return currId;
        }
    }

    @DOpt(type=DOpt.Type.AutoAttributeValueSynchroniser)
    public static void updateAutoGeneratedValue(
            DAttr attrib,
            Tuple derivingValue,
            Object minVal,
            Object maxVal) throws ConstraintViolationException {

        if (minVal != null && maxVal != null) {
            //TODO: update this for the correct attribute if there are more than one auto attributes of this class

            String maxId = (String) maxVal;
            try {
                int maxIdNum = Integer.parseInt(maxId.substring(1));

                if (maxIdNum > idCounter) // extra check
                    idCounter = maxIdNum;

            } catch (RuntimeException e) {
                throw new ConstraintViolationException(
                        ConstraintViolationException.Code.INVALID_VALUE, e, new Object[] {maxId});
            }
        }
    }

    public UtilityCost(String utilityCostId, String spendingDate, Integer electricitySpending, Integer internetSpending) {
        this(null,spendingDate,electricitySpending,internetSpending,null);
    }

    public UtilityCost(String spendingDate, Integer electricitySpending, Integer internetSpending, FinanceReport financeReport) {
        this(null,spendingDate,electricitySpending,internetSpending,financeReport);
    }

    public UtilityCost(String spendingDate, Integer electricitySpending, Integer internetSpending) {
        this(null,spendingDate,electricitySpending, internetSpending,null);
    }

    public String getUtilityCostId() {
        return utilityCostId;
    }

    public void setUtilityCostId(String utilityCostId) {
        this.utilityCostId = utilityCostId;
    }

    public String getSpendingDate() {
        return spendingDate;
    }

    public void setSpendingDate(String spendingDate) {
        this.spendingDate = spendingDate;
    }

    public Integer getElectricitySpending() {
        return electricitySpending;
    }

    public void setElectricitySpending(Integer electricitySpending) {
        this.electricitySpending = electricitySpending;
    }

    public Integer getInternetSpending() {
        return internetSpending;
    }

    public void setInternetSpending(Integer internetSpending) {
        this.internetSpending = internetSpending;
    }

    public FinanceReport getFinanceReport() {
        return financeReport;
    }

    public void setFinanceReport(FinanceReport financeReport) {
        this.financeReport = financeReport;
    }
}
